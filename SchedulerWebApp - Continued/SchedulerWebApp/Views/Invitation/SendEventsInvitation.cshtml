@model SchedulerWebApp.Models.ViewModels.InvitationViewModel

@{
    ViewBag.Title = "Invite Participant";

}


@Styles.Render("~/Content/tagIt")
<div class="col-md-8 col-md-offset-2">


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <h2 class="text-center-smallScreen">@Model.EventTitle</h2>
            <h4 class="text-center-smallScreen">Invite participants</h4>
            <hr />


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.EventId)
            @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "hidden", id = "HiddenDatePickerList" } })

            <div class="form-group">
                @Html.LabelFor(model => model.EventTitle, new { @class = "control-label col-sm-3 hidden-xs" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => (model.EventTitle), new { htmlAttributes = new { @class = "form-control", disabled = "true", title = "Event's title" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EventLocation, new { @class = "control-label col-sm-3 hidden-xs" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => (model.EventLocation), new { htmlAttributes = new { @class = "form-control", disabled = "true", title = "Event's Location" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EventDate, new { @class = "control-label col-sm-3 hidden-xs" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => (model.EventDate), new { htmlAttributes = new { @class = "form-control", disabled = "true", title = "Event's Date" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ListDate, new { @class = "control-label col-sm-3 hidden-xs" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.ListDate, new { htmlAttributes = new { @class = "form-control datepicker", id = "datePickerList", placeholder = "List date" } })
                    @Html.ValidationMessageFor(model => model.ListDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="remainderInput" class="form-group">
                @Html.LabelFor(model => model.ReminderDate, new { @class = "control-label col-sm-3 hidden-xs" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.ReminderDate, new { htmlAttributes = new { @class = "form-control datepicker", id = "datePickerRemainder", placeholder = "Remeinder date" } })
                    @Html.ValidationMessageFor(model => model.ReminderDate, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.ParticipantsEmails, new { @class = "control-label col-sm-3 hidden-xs" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.ParticipantsEmails, new { htmlAttributes = new { @class = "form-control ", placeholder = "Enter Emails separated by comma" } })
                    @Html.ValidationMessageFor(model => model.ParticipantsEmails, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-group-lg">
                <div class="col-sm-offset-3 col-sm-9">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.SendRemainder, new { @class = "large-checkbox", id = "remainderCheckbox" }) @Html.LabelFor(model => model.SendRemainder)
                        </label>
                    </div>
                </div>
            </div>

            <div id="remainderInput" class="form-group" style="display: @displayValue">
                @Html.LabelFor(model => model.ReminderDate, new { @class = "control-label col-sm-3 hidden-xs" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.ReminderDate, new { htmlAttributes = new { @class = "form-control datepicker", id = "datePickerRemainder", placeholder = "Date to send remainder(s)" } })
                    @Html.ValidationMessageFor(model => model.ReminderDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-9 col-sm-offset-3">
                    <button id="submitButton" type="submit" class="btn btn-info btn-block">Invite</button>
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-9 col-sm-offset-3">
                    @Html.ActionLink("Cancel", "Index", "Events", null, new { @class = "btn btn-danger btn-block", id = "invitationCancelButton" })
                </div>
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/tagIt")
    @Scripts.Render("~/bundles/dateTimePicker")
    @Scripts.Render("~/bundles/custom")

    <script type="text/javascript">

        //Hide remeinder input if checkbox is not checked
        var isChecked = $('#remainderCheckbox:checked').length;
        console.log("begining " + isChecked);
        if (isChecked < 1) {
            $('#datePickerRemainder').val('');
            $('#remainderInput').hide();
        }

        $(function () {

            initTagIt();

            var maxDate = convertInputDateToMomentDate("HiddenDatePickerList");

            linkTwoInputs('datePickerList', 'datePickerRemainder', maxDate);
        });

        $("form").submit(function (e) {
            var isValid = $('form').valid();
            console.log(isValid);

            if (isValid) {
                changeButtonText('submitButton', 'Sending');
            }
        });

        $('#invitationCancelButton').on('click', function () {
            changeButtonText('invitationCancelButton', 'Cancelling');
        });

        $('#remainderCheckbox').change(function () {
            var remeinderInput = $('#remainderInput');
            var cheked = $('#remainderCheckbox:checked').length;

            if (cheked < 1) {
                console.log(cheked + ' > 1');
                console.log(' unchacked');
                remeinderInput.slideUp('slow');
            } else {
                console.log(cheked + ' = 1');
                console.log('Checked');
                $('#datePickerRemainder').val('');
                remeinderInput.slideDown('slow');
            }
        });

        function inputInit(elementId) {

            var todaysDate = moment(new Date());
            var element = '#' + elementId;

            $(element).datetimepicker({
                format: "DD.MM.YYYY HH:mm",
                minDate: todaysDate.subtract(0, 'days').startOf('day')
            });
        }

        function initTagIt() {
            $("#ParticipantsEmails").tagit({
                placeholderText: "Participant Emails separated by comma",
                autocomplete: ({
                    source: function (request, response) {
                        $.ajax({
                            url: '@Url.Action("SearchContact", "Contacts")',
                            dataType: "json",
                            data: { term: request.term },
                            success: function (data) {
                                response(data);
                            }
                        });
                    }
                })
            });
        }

        setDatesInCorrectFormat();

        AllowValidationOnHiddenInputs();

    </script>
}