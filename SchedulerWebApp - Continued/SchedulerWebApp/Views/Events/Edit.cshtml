@model SchedulerWebApp.Models.Event

@{
    ViewBag.Title = "Edit " + Model.Title;
}

<div class="col-md-8 col-md-offset-2">
    <h2 class="text-center-smallScreen ">Edit @Model.Title</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.SchedulerUserId)

            <div class="form-group">
                @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Location, new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", id = "datePickerStart" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ListDate, new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ListDate, new { htmlAttributes = new { @class = "form-control", id = "datePickerList" } })
                    @Html.ValidationMessageFor(model => model.ListDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReminderDate, new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ReminderDate, new { htmlAttributes = new { @class = "form-control", id = "datePickerRemainder" } })
                    @Html.ValidationMessageFor(model => model.ReminderDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-9 col-md-offset-3 col-xs-12">
                    <input type="submit" value="Save" class=" form-control btn btn-info col-xs-12 " />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-3 col-md-9 col-xs-12">
                    @Html.ActionLink("Cancel", "Details", "Events", new { id = Model.Id }, new { @class = "form-control btn btn-danger col-md-11 col-xs-12" })
                </div>
            </div>
        </div>
    }

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dateTimePicker")
    @Scripts.Render("~/bundles/custom")

    <script type="text/javascript">
        $(function () {
            linkThreeDatesElements('datePickerStart', 'datePickerList', 'datePickerRemainder');
        });

        $.validator.addMethod('date', function (value, element) {
            var d = new Date();
            return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
        });

    </script>
}